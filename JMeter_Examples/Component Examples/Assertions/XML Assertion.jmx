<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup,1)} </stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration,120)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Per Request" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 1 - Pass - XML Format" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;

&lt;bookstore&gt;

&lt;book category=&quot;cooking&quot;&gt;
  &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt;
  &lt;author&gt;Giada De Laurentiis&lt;/author&gt;
  &lt;year&gt;2005&lt;/year&gt;
  &lt;price&gt;30.00&lt;/price&gt;
&lt;/book&gt;

&lt;book category=&quot;children&quot;&gt;
  &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt;
  &lt;author&gt;J K. Rowling&lt;/author&gt;
  &lt;year&gt;2005&lt;/year&gt;
  &lt;price&gt;29.99&lt;/price&gt;
&lt;/book&gt;

&lt;book category=&quot;web&quot;&gt;
  &lt;title lang=&quot;en&quot;&gt;XQuery Kick Start&lt;/title&gt;
  &lt;author&gt;James McGovern&lt;/author&gt;
  &lt;author&gt;Per Bothner&lt;/author&gt;
  &lt;author&gt;Kurt Cagle&lt;/author&gt;
  &lt;author&gt;James Linn&lt;/author&gt;
  &lt;author&gt;Vaidyanathan Nagarajan&lt;/author&gt;
  &lt;year&gt;2003&lt;/year&gt;
  &lt;price&gt;49.99&lt;/price&gt;
&lt;/book&gt;

	

&lt;/bookstore&gt;</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="XML Assertion" enabled="true"/>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Per Controller" enabled="true"/>
        <hashTree>
          <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="XML Assertion" enabled="true"/>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 2 - Pass - XML Format" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://someurl.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">&lt;?xml version=&quot;1.0&quot; ?&gt;
&lt;wfs:GetFeature
   service=&quot;WFS&quot;
   version=&quot;1.0.0&quot;
   xmlns:wfs=&quot;http://www.opengis.net/wfs&quot;
   xmlns:ogc=&quot;http://www.opengis.net/ogc&quot;
   xmlns:myns=&quot;http://www.example.com/myns&quot;
   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
   xsi:schemaLocation=&quot;http://www.opengis.net/wfs ../wfs/1.0.0/WFS-basic.xsd&quot;&gt;
   &lt;wfs:Query typeName=&quot;myns:COLA&quot;&gt;
      &lt;ogc:PropertyName&gt;myns:MKT_ID&lt;/ogc:PropertyName&gt;
      &lt;ogc:PropertyName&gt;myns:NAME&lt;/ogc:PropertyName&gt;
      &lt;ogc:PropertyName&gt;myns:SHAPE&lt;/ogc:PropertyName&gt;
      &lt;ogc:Filter&gt;
          &lt;ogc:And&gt;
            &lt;ogc:And&gt;
                &lt;ogc:PropertyIsGreaterThan&gt;
                        &lt;ogc:PropertyName&gt;myns:COLA/myns:MKT_ID&lt;/ogc:PropertyName&gt;
                        &lt;ogc:Literal&gt; 2 &lt;/ogc:Literal&gt;
                &lt;/ogc:PropertyIsGreaterThan&gt;
                &lt;ogc:PropertyIsEqualTo&gt;
                        &lt;ogc:PropertyName&gt;myns:COLA/myns:NAME&lt;/ogc:PropertyName&gt;
                &lt;ogc:Literal&gt;cola_c&lt;/ogc:Literal&gt;
                &lt;/ogc:PropertyIsEqualTo&gt;
            &lt;/ogc:And&gt;
            &lt;ogc:Or&gt;
                &lt;ogc:PropertyIsEqualTo&gt;
                        &lt;ogc:PropertyName&gt;myns:COLA/myns:MKT_ID&lt;/ogc:PropertyName&gt;
                        &lt;ogc:Literal&gt;3&lt;/ogc:Literal&gt;
                &lt;/ogc:PropertyIsEqualTo&gt;
                &lt;ogc:PropertyIsEqualTo&gt;
                        &lt;ogc:PropertyName&gt;myns:COLA/myns:NAME&lt;/ogc:PropertyName&gt;
                        &lt;ogc:Literal&gt;cola_d&lt;/ogc:Literal&gt;
                &lt;/ogc:PropertyIsEqualTo&gt;
            &lt;/ogc:Or&gt;
          &lt;/ogc:And&gt;
      &lt;/ogc:Filter&gt;
   &lt;/wfs:Query&gt;
&lt;/wfs:GetFeature&gt;</stringProp>
            <stringProp name="RESPONSE_TIME">${rT}</stringProp>
            <stringProp name="LATENCY">${__Random(1,20)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 3 - Pass - XML Format" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://someurl.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">&lt;xsd:schema targetNamespace=&quot;http://www.example.com/myns&quot; xmlns:wfs=&quot;http://www.opengis.net/wfs&quot; xmlns:myns=&quot;http://www.example.com/myns&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; elementFormDefault=&quot;qualified&quot; version=&quot;1.0.0&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
   &lt;xsd:import namespace=&quot;http://www.opengis.net/gml&quot; schemaLocation=&quot;http://localhost:8888/examples/servlets/xsds/feature.xsd&quot;/&gt;
   &lt;xsd:element name=&quot;COLA&quot; type=&quot;myns:COLAType&quot; substitutionGroup=&quot;gml:_Feature&quot;/&gt;
   &lt;xsd:complexType name=&quot;COLAType&quot;&gt;
      &lt;xsd:complexContent&gt;
         &lt;xsd:extension base=&quot;gml:AbstractFeatureType&quot;&gt;
            &lt;xsd:sequence&gt;
               &lt;xsd:element name=&quot;MKT_ID&quot; type=&quot;xsd:double&quot;/&gt;
               &lt;xsd:element name=&quot;NAME&quot; nillable=&quot;true&quot;&gt;
                  &lt;xsd:simpleType&gt;
                     &lt;xsd:restriction base=&quot;xsd:string&quot;&gt;
                        &lt;xsd:maxLength value=&quot;32&quot;/&gt;
                     &lt;/xsd:restriction&gt;
                  &lt;/xsd:simpleType&gt;
               &lt;/xsd:element&gt;
               &lt;xsd:element name=&quot;SHAPE&quot; type=&quot;gml:PolygonMemberType&quot; nillable=&quot;true&quot;/&gt;
            &lt;/xsd:sequence&gt;
            &lt;xsd:attribute name=&quot;fid&quot; type=&quot;xsd:double&quot;/&gt;
         &lt;/xsd:extension&gt;
      &lt;/xsd:complexContent&gt;
   &lt;/xsd:complexType&gt;
&lt;/xsd:schema&gt;</stringProp>
            <stringProp name="RESPONSE_TIME">${rT}</stringProp>
            <stringProp name="LATENCY">${__Random(1,20)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 4 - Pass - XML Format" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://someurl.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">&lt;?xml version = &apos;1.0&apos; encoding = &apos;UTF-8&apos;?&gt;
&lt;wfs:FeatureCollection xsi:schemaLocation=&quot;http://www.example.com/myns http://localhost:8888/wfsservlet?featureTypeId=1 http://www.opengis.net/wfs ../wfs/1.0.0/WFS-basic.xsd&quot; xmlns:wfs=&quot;http://www.opengis.net/wfs&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
   &lt;gml:boundedBy xmlns:gml=&quot;http://www.opengis.net/gml&quot;&gt;
      &lt;gml:Box srsName=&quot;SDO:8307&quot;&gt;
         &lt;gml:coordinates&gt;3.0,3.0 6.0,5.0&lt;/gml:coordinates&gt;
      &lt;/gml:Box&gt;
   &lt;/gml:boundedBy&gt;
   &lt;gml:featureMember xmlns:gml=&quot;http://www.opengis.net/gml&quot;&gt;
      &lt;myns:COLA fid=&quot;3&quot; xmlns:myns=&quot;http://www.example.com/myns&quot;&gt;
         &lt;myns:MKT_ID&gt;3&lt;/myns:MKT_ID&gt;
         &lt;myns:NAME&gt;cola_c&lt;/myns:NAME&gt;
         &lt;myns:SHAPE&gt;
            &lt;gml:Polygon srsName=&quot;SDO:8307&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot;&gt;
               &lt;gml:outerBoundaryIs&gt;
                  &lt;gml:LinearRing&gt;
                     &lt;gml:coordinates decimal=&quot;.&quot; cs=&quot;,&quot; ts=&quot; &quot;&gt;3.0,3.0 6.0,3.0
6.0,5.0 4.0,5.0 3.0,3.0 &lt;/gml:coordinates&gt;
                  &lt;/gml:LinearRing&gt;
               &lt;/gml:outerBoundaryIs&gt;
            &lt;/gml:Polygon&gt;
         &lt;/myns:SHAPE&gt;
      &lt;/myns:COLA&gt;
   &lt;/gml:featureMember&gt;
&lt;/wfs:FeatureCollection&gt;</stringProp>
            <stringProp name="RESPONSE_TIME">${rT}</stringProp>
            <stringProp name="LATENCY">${__Random(1,20)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 5 - Fail - No XML Format" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://someurl.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{}</stringProp>
            <stringProp name="RESPONSE_TIME">${rT}</stringProp>
            <stringProp name="LATENCY">${__Random(1,20)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
