<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup,1)} </stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration,120)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="HTTP Code - Per Request" enabled="true"/>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 1 - Pass - contain antonio@flood.io" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{
   &quot;events&quot;: [{
      &quot;contentId&quot;: 330397,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-10-04 00:54:00 +00:00&quot;,
      &quot;campaignId&quot;: 67890,
      &quot;templateId&quot;: 11111,
      &quot;messageId&quot;: &quot;1234example9876&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}, {
      &quot;contentId&quot;: 329261,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-09-30 19:50:00 +00:00&quot;,
      &quot;campaignId&quot;:67890,
      &quot;templateId&quot;: 22222,
      &quot;messageId&quot;: &quot;9876example1234&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}]
}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1384169174">antonio@flood.io</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="HTTP Code - Per Controller" enabled="true"/>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - This Assertion affects to all the requests in the Controller" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1384169174">antonio@flood.io</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 2 - Pass - contain antonio@flood.io" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{
   &quot;events&quot;: [{
      &quot;contentId&quot;: 330397,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-10-04 00:54:00 +00:00&quot;,
      &quot;campaignId&quot;: 67890,
      &quot;templateId&quot;: 11111,
      &quot;messageId&quot;: &quot;1234example9876&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}, {
      &quot;contentId&quot;: 329261,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-09-30 19:50:00 +00:00&quot;,
      &quot;campaignId&quot;:67890,
      &quot;templateId&quot;: 22222,
      &quot;messageId&quot;: &quot;9876example1234&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}]
}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 3 - Pass - contain antonio@flood.io" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">201</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{
   &quot;events&quot;: [{
      &quot;contentId&quot;: 330397,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-10-04 00:54:00 +00:00&quot;,
      &quot;campaignId&quot;: 67890,
      &quot;templateId&quot;: 11111,
      &quot;messageId&quot;: &quot;1234example9876&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}, {
      &quot;contentId&quot;: 329261,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-09-30 19:50:00 +00:00&quot;,
      &quot;campaignId&quot;:67890,
      &quot;templateId&quot;: 22222,
      &quot;messageId&quot;: &quot;9876example1234&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}]
}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 4 - Fail - doesn&apos;t contain antonio@flood.io" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">203</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - This Assertion affects to all the requests in the Controller - Negative Search" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1384169174">antonio@flood.io</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">20</intProp>
          </ResponseAssertion>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 5 - Fail - contain antonio@flood.io - Negative" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{
   &quot;events&quot;: [{
      &quot;contentId&quot;: 330397,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-10-04 00:54:00 +00:00&quot;,
      &quot;campaignId&quot;: 67890,
      &quot;templateId&quot;: 11111,
      &quot;messageId&quot;: &quot;1234example9876&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}, {
      &quot;contentId&quot;: 329261,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-09-30 19:50:00 +00:00&quot;,
      &quot;campaignId&quot;:67890,
      &quot;templateId&quot;: 22222,
      &quot;messageId&quot;: &quot;9876example1234&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}]
}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 6 - Fail - contain antonio@flood.io - Negative" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">201</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{
   &quot;events&quot;: [{
      &quot;contentId&quot;: 330397,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-10-04 00:54:00 +00:00&quot;,
      &quot;campaignId&quot;: 67890,
      &quot;templateId&quot;: 11111,
      &quot;messageId&quot;: &quot;1234example9876&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}, {
      &quot;contentId&quot;: 329261,
      &quot;recurringCampaignId&quot;: 12345,
      &quot;email&quot;: &quot;antonio@flood.io&quot;,
      &quot;createdAt&quot;: &quot;2016-09-30 19:50:00 +00:00&quot;,
      &quot;campaignId&quot;:67890,
      &quot;templateId&quot;: 22222,
      &quot;messageId&quot;: &quot;9876example1234&quot;,
      &quot;eventType&quot;: &quot;emailSend&quot;
}]
}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Dummy Sampler 7 - Pass - doesn&apos;t contain antonio@flood.io - Negative" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">203</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">GET https://www.example.com/somepath</stringProp>
            <stringProp name="RESPONSE_DATA">{}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(50,100)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
